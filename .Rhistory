myDNA <-fasta2DNAbin(paste0(path1, "gelb.fasta"))
class(myDNA)
myDNA <- as.matrix(myDNA)
obj <- DNAbin2genind(myDNA, polyThres=0.01)
obj
class(obj)
sum(is.na(obj@tab))
# PCA calculation
obj_scale<-scaleGen(obj,NA.method=c("mean"))     #  wrights matrix for PCA (see adegenet_basiscs.pdf)
class(obj_scale)
# barplot of eigenvalues
pca1 <- dudi.pca(obj_scale,cent=FALSE,scale=FALSE,scannf=FALSE,nf=3)
eigenvalues <- barplot(pca1$eig[1:50],main="PCA eigenvalues", col=heat.colors(50))
pc.scores <- pca1$li # pc scores, I version
write.csv(pc.scores, file = paste0(path2, "pc.scores.csv")) # extract pc scores to the working directory
getwd () # function to access the working directory
plot (pc.scores[,1], pc.scores[,2], xlab = "PC1", ylab = "PC2", asp = T)
#library ( factoextra)
#pc.scores = get_pca_ind (pca1)
#pc.scores$coord # pc scores, II version
pdf("eigenvalues.pdf",width=6,height=4)
#pca1
# basic scatterplot axes1-2
s.label(pca1$li,  clab=0.5)
title("Natrix\axes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# basic scatterplot axes 1-3
s.label(pca1$li,  xax=1,yax=3, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# population definition (if not in fasta format present - need extra csv file)
popFac <- read.csv(paste0(path1, "populations_gelb.csv"))
class(popFac)
data.pop <- as.factor(rep(c('1', '2', '3', '4'), c(499, 27, 202, 241)))
pop(obj) <- data.pop
# advanced scatterplots
s.class                               # OPTIONAL: help for function of "s.class"
# scatterplot of pc1 and pc2
s.class(pca1$li, pop(obj), xax=1,yax=2, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc3
s.class(pca1$li,pop(obj),xax=1,yax=3,sub="PCA 1-3",csub=4)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes1-2
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=2, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes 1-3
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=3, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc2 coloured
col <- rainbow(length(levels(pop(obj))))
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
title("PCA of Pelodiscus_farm.str\naxes 1-2")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
# scatterplot of pc1 and pc3 coloured
colorplot(pca1$li[c(1,3)], pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 3")
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
library(ape)
library(adegenet)
path1 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/")
path2 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/res/")
myDNA <-fasta2DNAbin(paste0(path1, "gelb.fas"))
class(myDNA)
myDNA <- as.matrix(myDNA)
obj <- DNAbin2genind(myDNA, polyThres=0.01)
obj
class(obj)
sum(is.na(obj@tab))
# PCA calculation
obj_scale<-scaleGen(obj,NA.method=c("mean"))     #  wrights matrix for PCA (see adegenet_basiscs.pdf)
class(obj_scale)
# barplot of eigenvalues
pca1 <- dudi.pca(obj_scale,cent=FALSE,scale=FALSE,scannf=FALSE,nf=3)
eigenvalues <- barplot(pca1$eig[1:50],main="PCA eigenvalues", col=heat.colors(50))
pc.scores <- pca1$li # pc scores, I version
write.csv(pc.scores, file = paste0(path2, "pc.scores.csv")) # extract pc scores to the working directory
getwd () # function to access the working directory
plot (pc.scores[,1], pc.scores[,2], xlab = "PC1", ylab = "PC2", asp = T)
#library ( factoextra)
#pc.scores = get_pca_ind (pca1)
#pc.scores$coord # pc scores, II version
pdf("eigenvalues.pdf",width=6,height=4)
#pca1
# basic scatterplot axes1-2
s.label(pca1$li,  clab=0.5)
title("Natrix\axes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# basic scatterplot axes 1-3
s.label(pca1$li,  xax=1,yax=3, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# population definition (if not in fasta format present - need extra csv file)
popFac <- read.csv(paste0(path1, "populations_gelb.csv"))
class(popFac)
data.pop <- as.factor(rep(c('1', '2', '3', '4'), c(499, 27, 202, 241)))
pop(obj) <- data.pop
# advanced scatterplots
s.class                               # OPTIONAL: help for function of "s.class"
# scatterplot of pc1 and pc2
s.class(pca1$li, pop(obj), xax=1,yax=2, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc3
s.class(pca1$li,pop(obj),xax=1,yax=3,sub="PCA 1-3",csub=4)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes1-2
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=2, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes 1-3
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=3, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc2 coloured
col <- rainbow(length(levels(pop(obj))))
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
title("PCA of Pelodiscus_farm.str\naxes 1-2")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
# scatterplot of pc1 and pc3 coloured
colorplot(pca1$li[c(1,3)], pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 3")
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
pca1$eig[1:20]
library(ape)
library(adegenet)
path1 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/")
path2 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/res/")
myDNA <-fasta2DNAbin(paste0(path1, "gelb.fas"))
class(myDNA)
myDNA <- as.matrix(myDNA)
obj <- DNAbin2genind(myDNA, polyThres=0.01)
obj
class(obj)
sum(is.na(obj@tab))
# PCA calculation
obj_scale<-scaleGen(obj,NA.method=c("mean"))     #  wrights matrix for PCA (see adegenet_basiscs.pdf)
class(obj_scale)
# barplot of eigenvalues
pca1 <- dudi.pca(obj_scale,cent=FALSE,scale=FALSE,scannf=FALSE,nf=3)
eigenvalues <- barplot(pca1$eig[1:50],main="PCA eigenvalues", col=heat.colors(50))
eigenvalues
barplot(pca1$eig[1:50],main="PCA eigenvalues", col=heat.colors(50))
barplot(pca1$eig[1:50],main="PCA eigenvalues")
max.temp <- c(22, 27, 26, 24, 23, 26, 28)
barplot(max.temp)
barplot(10)
plot(1:10)
library(ape)
library(adegenet)
path1 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/")
path2 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/res/")
myDNA <-fasta2DNAbin(paste0(path1, "gelb.fas"))
class(myDNA)
myDNA <- as.matrix(myDNA)
obj <- DNAbin2genind(myDNA, polyThres=0.01)
obj
class(obj)
sum(is.na(obj@tab))
# PCA calculation
obj_scale<-scaleGen(obj,NA.method=c("mean"))     #  wrights matrix for PCA (see adegenet_basiscs.pdf)
class(obj_scale)
# barplot of eigenvalues
pca1 <- dudi.pca(obj_scale,cent=FALSE,scale=FALSE,scannf=FALSE,nf=3)
eigenvalues <- barplot(pca1$eig[1:50],main="PCA eigenvalues", col=heat.colors(50))
pc.scores <- pca1$li # pc scores, I version
write.csv(pc.scores, file = paste0(path2, "pc.scores.csv")) # extract pc scores to the working directory
getwd () # function to access the working directory
plot (pc.scores[,1], pc.scores[,2], xlab = "PC1", ylab = "PC2", asp = T)
#library ( factoextra)
#pc.scores = get_pca_ind (pca1)
#pc.scores$coord # pc scores, II version
#pdf("eigenvalues.pdf",width=6,height=4)
#pca1
# basic scatterplot axes1-2
s.label(pca1$li,  clab=0.5)
title("Natrix\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# basic scatterplot axes 1-3
s.label(pca1$li,  xax=1,yax=3, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# population definition (if not in fasta format present - need extra csv file)
popFac <- read.csv(paste0(path1, "populations_gelb.csv"))
class(popFac)
data.pop <- as.factor(rep(c('1', '2', '3', '4'), c(499, 27, 202, 241)))
pop(obj) <- data.pop
# advanced scatterplots
s.class                               # OPTIONAL: help for function of "s.class"
# scatterplot of pc1 and pc2
s.class(pca1$li, pop(obj), xax=1,yax=2, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc3
s.class(pca1$li,pop(obj),xax=1,yax=3,sub="PCA 1-3",csub=4)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes1-2
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=2, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes 1-3
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=3, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc2 coloured
col <- rainbow(length(levels(pop(obj))))
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
title("PCA of Pelodiscus_farm.str\naxes 1-2")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
# scatterplot of pc1 and pc3 coloured
colorplot(pca1$li[c(1,3)], pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 3")
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
pca1$eig[1:20]
pca1$eig[1:7]
library(ape)
library(adegenet)
path1 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/")
path2 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/res/")
myDNA <-fasta2DNAbin(paste0(path1, "gelb.fas"))
class(myDNA)
myDNA <- as.matrix(myDNA)
obj <- DNAbin2genind(myDNA, polyThres=0.01)
obj
class(obj)
sum(is.na(obj@tab))
# PCA calculation
obj_scale<-scaleGen(obj,NA.method=c("mean"))     #  wrights matrix for PCA (see adegenet_basiscs.pdf)
class(obj_scale)
# barplot of eigenvalues
pca1 <- dudi.pca(obj_scale,cent=FALSE,scale=FALSE,scannf=FALSE,nf=3)
eigenvalues <- barplot(pca1$eig[1:50],main="PCA eigenvalues", col=heat.colors(50))
pc.scores <- pca1$li # pc scores, I version
write.csv(pc.scores, file = paste0(path2, "pc.scores.csv")) # extract pc scores to the working directory
getwd () # function to access the working directory
plot (pc.scores[,1], pc.scores[,2], xlab = "PC1", ylab = "PC2", asp = T)
#library ( factoextra)
#pc.scores = get_pca_ind (pca1)
#pc.scores$coord # pc scores, II version
#pdf("eigenvalues.pdf",width=6,height=4)
#pca1
# basic scatterplot axes1-2
s.label(pca1$li,  clab=0.5)
title("Natrix\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# basic scatterplot axes 1-3
s.label(pca1$li,  xax=1,yax=3, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:20], 3,1,2) # adds barplot of eigenvalues
# population definition (if not in fasta format present - need extra csv file)
popFac <- read.csv(paste0(path1, "populations_gelb.csv"))
class(popFac)
data.pop <- as.factor(rep(c('1', '2', '3', '4'), c(499, 27, 202, 241)))
pop(obj) <- data.pop
# advanced scatterplots
s.class                               # OPTIONAL: help for function of "s.class"
# scatterplot of pc1 and pc2
s.class(pca1$li, pop(obj), xax=1,yax=2, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc3
s.class(pca1$li,pop(obj),xax=1,yax=3,sub="PCA 1-3",csub=4)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes1-2
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=2, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes 1-3
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=3, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc2 coloured
col <- rainbow(length(levels(pop(obj))))
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
title("PCA of Pelodiscus_farm.str\naxes 1-2")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
# scatterplot of pc1 and pc3 coloured
colorplot(pca1$li[c(1,3)], pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 3")
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
library(ape)
library(adegenet)
path1 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/")
path2 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/res/")
myDNA <-fasta2DNAbin(paste0(path1, "gelb.fas"))
class(myDNA)
myDNA <- as.matrix(myDNA)
obj <- DNAbin2genind(myDNA, polyThres=0.01)
obj
class(obj)
sum(is.na(obj@tab))
# PCA calculation
obj_scale<-scaleGen(obj,NA.method=c("mean"))     #  wrights matrix for PCA (see adegenet_basiscs.pdf)
class(obj_scale)
# barplot of eigenvalues
pca1 <- dudi.pca(obj_scale,cent=FALSE,scale=FALSE,scannf=FALSE,nf=3)
eigenvalues <- barplot(pca1$eig[1:7],main="PCA eigenvalues", col=heat.colors(50))
pc.scores <- pca1$li # pc scores, I version
write.csv(pc.scores, file = paste0(path2, "pc.scores.csv")) # extract pc scores to the working directory
getwd () # function to access the working directory
plot (pc.scores[,1], pc.scores[,2], xlab = "PC1", ylab = "PC2", asp = T)
#library ( factoextra)
#pc.scores = get_pca_ind (pca1)
#pc.scores$coord # pc scores, II version
#pdf("eigenvalues.pdf",width=6,height=4)
#pca1
# basic scatterplot axes1-2
s.label(pca1$li,  clab=0.5)
title("Natrix\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# basic scatterplot axes 1-3
s.label(pca1$li,  xax=1,yax=3, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# population definition (if not in fasta format present - need extra csv file)
popFac <- read.csv(paste0(path1, "populations_gelb.csv"))
class(popFac)
data.pop <- as.factor(rep(c('1', '2', '3', '4'), c(499, 27, 202, 241)))
pop(obj) <- data.pop
# advanced scatterplots
s.class                               # OPTIONAL: help for function of "s.class"
# scatterplot of pc1 and pc2
s.class(pca1$li, pop(obj), xax=1,yax=2, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc3
s.class(pca1$li,pop(obj),xax=1,yax=3,sub="PCA 1-3",csub=4)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes1-2
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=2, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes 1-3
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=3, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc2 coloured
col <- rainbow(length(levels(pop(obj))))
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
title("PCA of Pelodiscus_farm.str\naxes 1-2")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
# scatterplot of pc1 and pc3 coloured
colorplot(pca1$li[c(1,3)], pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 3")
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
data.pop
library(ape)
library(adegenet)
path1 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/")
path2 <- paste0(getwd(), "/Downloads/delete/dj-adegenet/res/")
myDNA <-fasta2DNAbin(paste0(path1, "gelb.fas"))
class(myDNA)
myDNA <- as.matrix(myDNA)
obj <- DNAbin2genind(myDNA, polyThres=0.01)
obj
class(obj)
sum(is.na(obj@tab))
# PCA calculation
obj_scale<-scaleGen(obj,NA.method=c("mean"))     #  wrights matrix for PCA (see adegenet_basiscs.pdf)
class(obj_scale)
# barplot of eigenvalues
pca1 <- dudi.pca(obj_scale,cent=FALSE,scale=FALSE,scannf=FALSE,nf=3)
eigenvalues <- barplot(pca1$eig[1:7],main="PCA eigenvalues", col=heat.colors(50))
pc.scores <- pca1$li # pc scores, I version
write.csv(pc.scores, file = paste0(path2, "pc.scores.csv")) # extract pc scores to the working directory
getwd () # function to access the working directory
plot (pc.scores[,1], pc.scores[,2], xlab = "PC1", ylab = "PC2", asp = T)
#library ( factoextra)
#pc.scores = get_pca_ind (pca1)
#pc.scores$coord # pc scores, II version
#pdf("eigenvalues.pdf",width=6,height=4)
#pca1
# basic scatterplot axes1-2
s.label(pca1$li,  clab=0.5)
title("Natrix\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# basic scatterplot axes 1-3
s.label(pca1$li,  xax=1,yax=3, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# population definition (if not in fasta format present - need extra csv file)
popFac <- read.csv(paste0(path1, "populations_gelb.csv"))
class(popFac)
data.pop <- as.factor(rep(c('1', '2'), c(499, 27)))
pop(obj) <- data.pop
# advanced scatterplots
s.class                               # OPTIONAL: help for function of "s.class"
# scatterplot of pc1 and pc2
s.class(pca1$li, pop(obj), xax=1,yax=2, clab=0.5)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc3
s.class(pca1$li,pop(obj),xax=1,yax=3,sub="PCA 1-3",csub=4)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes1-2
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=2, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-2")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# coloured scatterplot axes 1-3
col <- rainbow(length(levels(pop(obj))))
s.class(pca1$li, pop(obj),xax=1,yax=3, col=transp(col,.6), axesell=FALSE, cstar=1, cpoint=3, grid=FALSE)
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
add.scatter.eig(pca1$eig[1:7], 3,1,2) # adds barplot of eigenvalues
# scatterplot of pc1 and pc2 coloured
col <- rainbow(length(levels(pop(obj))))
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
title("PCA of Pelodiscus_farm.str\naxes 1-2")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
# scatterplot of pc1 and pc3 coloured
colorplot(pca1$li[c(1,3)], pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 3")
title("PCA of XXXX_farm.str\naxes 1-3")          # OPTIONAL: adds title
abline(v=0,h=0,col="grey", lty=2)
## cesty k souborům, předpoklad je stáhnutí celého repozitáře https://github.com/PetrBalej/rgee/archive/master.zip
# domovský adresář (nebo jiný), z něhož se odvodí další cesty
# wd <- path.expand("~")
wd <- paste0(path.expand("~"), "/Downloads/rgee2/rgee")
setwd(wd)
# fitrace NDOP záznamů
# source(paste0(wd, "/R/export_raster/ndop.R"))
# print(ndop(list(from = '2017-01-01', to = '2019-12-31'), list(from = 4, to = 7), paste0(getwd(), "/../ndop/csv")))
# fitrace GBIF záznamů
# source(paste0(wd, "/R/export_raster/gbif.R"))
# print(gbif(list(from = '2017-01-01', to = '2019-12-31'), list(from = 4, to = 7), paste0(getwd(), "/../gbif/csv")))
# print(gbif(list(from = '2017-01-01', to = '2019-12-31'), list(from = 4, to = 7), paste0(getwd(), "/../gbif/csv"), "0123613-200613084148143.csv"))
# res_ndop <- ndop(list(from = '2017-01-01', to = '2019-12-31'), list(from = 4, to = 7), paste0(getwd(), "/../ndop/csv"))
# res_gbif <- gbif(list(from = '2017-01-01', to = '2019-12-31'), list(from = 4, to = 7), paste0(getwd(), "/../gbif/csv"), "0123613-200613084148143.csv")
# kontrola (do)instalace všech dodatečně potřebných balíčků
required_packages <- c("tidyverse", "sf", "lubridate", "magrittr", "dplyr")
install.packages(setdiff(required_packages, rownames(installed.packages())))
# načte všechny požadované knihovny jako dělá jednotlivě library()
lapply(required_packages, require, character.only = TRUE)
# csvgee <- read.csv(paste0(getwd(), "/gee_datasets/gee-pouzite-datasety.csv"))
# csvgee$"short"[[2]]
# csvgee[1,]
wd <- paste0(path.expand("~"), "/Downloads/rgee2/rgee")
setwd(wd)
export_path <- paste0(getwd(), "/../export/schuzka2-total-gbif-ndop/")
# species <- c("Loxia curvirostra", "Charadrius dubius", "Cinclus cinclus", "Locustella luscinioides") # "Loxia curvirostra", "Charadrius dubius", "Cinclus cinclus", "Locustella luscinioides"
# pouze průnik NDOP a GBIF
species <- c("Parus major","Fringilla coelebs","Ardea cinerea","Buteo buteo","Emberiza citrinella","Phylloscopus collybita","Cygnus olor","Cyanistes caeruleus","Ciconia ciconia","Columba palumbus","Dendrocopos major","Sylvia atricapilla","Hirundo rustica","Fulica atra","Sturnus vulgaris","Chroicocephalus ridibundus","Erithacus rubecula","Turdus philomelos","Podiceps cristatus","Motacilla alba","Aythya fuligula","Falco tinnunculus","Lanius collurio","Garrulus glandarius","Circus aeruginosus","Phalacrocorax carbo","Alcedo atthis","Aythya ferina","Phoenicurus ochruros","Alauda arvensis","Anser anser","Pica pica","Apus apus","Corvus corax","Chloris chloris","Picus viridis","Carduelis carduelis","Passer montanus","Turdus pilaris","Periparus ater","Ardea alba","Dryocopus martius","Streptopelia decaocto","Delichon urbicum","Passer domesticus","Tachybaptus ruficollis","Turdus viscivorus","Phylloscopus trochilus","Crex crex","Mergus merganser","Coccothraustes coccothraustes","Cuculus canorus","Ciconia nigra","Phasianus colchicus","Regulus regulus","Accipiter nisus","Haliaeetus albicilla","Prunella modularis","Anas crecca","Gallinula chloropus","Spinus spinus","Motacilla cinerea","Pyrrhula pyrrhula","Charadrius dubius","Emberiza schoeniclus","Corvus corone","Phoenicurus phoenicurus","Regulus ignicapilla","Ficedula albicollis","Serinus serinus","Columba oenas","Corvus cornix","Luscinia megarhynchos","Bucephala clangula","Aegithalos caudatus","Saxicola rubetra","Anthus trivialis","Strix aluco","Certhia familiaris","Sylvia curruca","Gallinago gallinago","Acrocephalus arundinaceus","Oriolus oriolus","Lanius excubitor","Poecile palustris","Coloeus monedula","Milvus milvus","Jynx torquilla","Sylvia borin","Actitis hypoleucos","Loxia curvirostra","Streptopelia turtur","Tringa ochropus","Larus cachinnans","Coturnix coturnix","Acrocephalus palustris","Netta rufina","Emberiza calandra","Sterna hirundo","Lophophanes cristatus") # "Loxia curvirostra", "Charadrius dubius", "Cinclus cinclus", "Locustella luscinioides" "Parus major" "Turdus merula"
species_u <- gsub(" ", "_", species)
px_size <- c(100) # 100, 200, 1000, 2000, 5000, 10000
if(1 == 1){
me <- " pictures=FALSE outputGrids=FALSE plots=FALSE "
}else{
me <- " responsecurves jackknife writeplotdata"
}
# dataframe <- data.frame()
for (px_size_item in px_size) {
for (species_u_item in species_u) {
dir_key <- paste0(px_size_item, "_", species_u_item)
dir_key_ndop <- paste0(px_size_item, "_ndop_", species_u_item)
dir_key_gbif <- paste0(px_size_item, "_gbif_", species_u_item)
dir_key_all <- paste0(px_size_item, "_all_", species_u_item)
dir_key_1_p <- paste0(export_path,dir_key, "_1/")
dir_key_2_p <- paste0(export_path,dir_key, "_2/")
dir.create(dir_key_1_p, showWarnings = FALSE)
dir.create(dir_key_2_p, showWarnings = FALSE)
system(paste0("java -mx2000m -jar ~/maxent/test_project/maxent/maxent.jar nowarnings noprefixes  outputdirectory=", dir_key_1_p, " samplesfile=/home/petr/Downloads/rgee2/export/schuzka2-total-gbif-ndop/species/", dir_key_gbif, ".csv environmentallayers=/home/petr/Downloads/rgee2/export/raster/schuzka_rastery_vif/", px_size_item, " testsamplesfile=/home/petr/Downloads/rgee2/export/schuzka2-total-gbif-ndop/species/", dir_key_ndop, ".csv ", " randomtestpoints=0 replicates=0 writebackgroundpredictions responsecurvesexponent appendtoresultsfile threads=4  autorun visible=FALSE", me))
system(paste0("java -mx2000m -jar ~/maxent/test_project/maxent/maxent.jar nowarnings noprefixes  outputdirectory=", dir_key_2_p, " samplesfile=/home/petr/Downloads/rgee2/export/schuzka2-total-gbif-ndop/species/", dir_key_all, ".csv environmentallayers=/home/petr/Downloads/rgee2/export/raster/schuzka_rastery_vif/", px_size_item, "  randomtestpoints=0 replicates=0 writebackgroundpredictions responsecurvesexponent appendtoresultsfile threads=4  autorun visible=FALSE", me))
# csvgee_1 <- read_csv(paste0(dir_key_1_p, "maxentResults.csv"))
# csvgee_2 <- read_csv(paste0(dir_key_2_p, "maxentResults.csv"))
# csvgee_1 %<>% select(1:11)
# csvgee_2 %<>% select(2:7)
# csvgee_1$px_size_item <- px_size_item
# write_csv(bind_cols(csvgee_1[1,], csvgee_2[1,]), paste0(export_path, "mv_2sT6.csv"), append = TRUE)
########################################
# csvgee_1$type <- 1
#csvgee_1$species <- species_u_item
# data.frame(type = 1, csvgee_1)
# data.frame(px_size_item = px_size_item, csvgee_1)
# data.frame(species = species_u_item, csvgee_1)
# add_column(csvgee_1, type = 1, .before = 1)
# add_column(csvgee_1, px_size_item = px_size_item, .before = 1)
# add_column(csvgee_1, species = species_u_item, .before = 1)
# csvgee_2$type <- 2
# csvgee_2$px_size_item <- px_size_item
# csvgee_2$species <- species_u_item
# data.frame(type = 1, csvgee_2)
# data.frame(px_size_item = px_size_item, csvgee_2)
# data.frame(species = species_u_item, csvgee_2)
# add_column(csvgee_2, type = 1, .before = 1)
# add_column(csvgee_2, px_size_item = px_size_item, .before = 1)
# add_column(csvgee_2, species = species_u_item, .before = 1)
# csvgee_1$"Training.AUC"
# csvgee_1$"Test.AUC"
# csvgee_2$"Training.AUC"
# write_csv(csvgee_1[1,], paste0(export_path, "mv_1sT4.csv"), append = TRUE)
# write_csv(csvgee_2[1,], paste0(export_path, "mv_2sT4.csv"), append = TRUE)
########################################
}
}
